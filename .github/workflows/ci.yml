name: continuous-integration
on: [push]

jobs:

  build:
    runs-on: ubuntu-latest
    environment: CI
    strategy:
      matrix:
        - postgres: 10
          python-version: [3.9]
        - postgres: 12
          python-version: [3.7, 3.8, 3.9]
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: dallinger
          POSTGRES_PASSWORD: dallinger
          POSTGRES_DB: dallinger
        with:
          image: postgres:${{ matrix.postgres }}
    steps:
      - name: Check out Dallinger repository
        uses: actions/checkout@v2
      - name: Install Ubuntu packages
        run: sudo apt-get --yes install pandoc enchant snapd curl
      - name: Install snap packages
        run: sudo snap install --classic heroku
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '11.0.0'
      - name: NVM
        run: |
          curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 10
          yarn --frozen-lockfile --ignore-engines
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          node-version: 2.6
      - name: Ruby dependencies
        run: |
          gem install danger
          gem install danger-commit_lint
          gem install chandler -v 0.7.0
      - name: Yarn
        run: yarn --frozen-lockfile --ignore-engines
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('build-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Python Installers
        run: |
          pip install --upgrade pip wheel tox
      - name: Before Tox
        run: |
          bundle exec danger
      - name: Run Tox
        env:
          DATABASE_URL: postgresql://dallinger:dallinger@localhost/dallinger
          PORT: 5000
          base_port: 5000
          threads: 1
          mturk_worker_id: ${{ secrets.MTURK_WORKER_ID }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          tox
