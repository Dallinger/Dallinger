name: Release
on: 
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    environment: pypi
    steps:
      - uses: actions/checkout@v2
      - name: Install Ubuntu packages
        run: sudo apt-get --yes install curl enchant pandoc
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Install Chandler
        run: gem install chandler -v 0.7.0
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '10'
      - name: Install node packages
        run: yarn --frozen-lockfile --ignore-engines
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Python Installers
        run: pip install --upgrade pip wheel tox
      - name: Wait on tests
        uses: lewagon/wait-on-check-action@v0.2
        with:
          ref: ${{ github.ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          running-workflow-name: 'release'
      - name: Set up deployment
        env:
          CHANDLER_GITHUB_API_TOKEN: ${{ secrets.CHANDLER_GITHUB_API_TOKEN }}
        run: |
          pandoc --from=markdown --to=rst --output=README.rst README.md
          pip install build
          python -m build --sdist --wheel .
          chandler push --tag-prefix=v
      - name: Deploy
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  docker-images:
    runs-on: ubuntu-latest
    environment: ghcr
    steps:
      - name: Get version
        id: vars
        run: echo ::set-output name=version::${GITHUB_REF#refs/*/v}
      - name: Login to Github ghcr
        uses: docker/login-action@v1
        with:
          # The GHCR_TOKEN in Dallinger's ghcr environment was created by user silviot
          username: silviot
          password: ${{ secrets.GHCR_TOKEN }}
          registry: ghcr.io
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build ghcr.io/dallinger/dallinger docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          load: false
          target: dallinger
          tags: ghcr.io/dallinger/dallinger:${{ steps.vars.outputs.version }}
      - name: Build ghcr.io/dallinger/dallinger-bot docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          load: false
          target: dallinger-bot
          tags: ghcr.io/dallinger/dallinger-bot:${{ steps.vars.outputs.version }}
